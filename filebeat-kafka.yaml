apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config-appnode1
  namespace: logging
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.registry.path: /usr/share/filebeat/data/registry
    filebeat.registry.flush: 10s

    filebeat.config:
      inputs:
        path: ${path.config}/inputs.d/*.yml
        reload.enabled: true
      modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: false

    processors:
      - drop_fields:
          fields: ["agent.ephemeral_id", "agent.hostname", "agent.id", "agent.type", "agent.version"]
    output.kafka:
      hosts: ["<kafka_node_name>:9200"]
      topic: "<topic_name>"
      required_acks: 1
      compression: gzip
      max_message_bytes: 20000000
      #bulk_max_size: 5
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-inputs-appnode1
  namespace: logging
  labels:
    k8s-app: filebeat
data:
  kubernetes.yml: |-
    - type: log
      paths:
      - "/app/platform/kubernetes/logs/*/*.log"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebeat-appnode1
  namespace: logging
  labels:
    k8s-app: filebeat-appnode1
spec:
  selector:
    matchLabels:
      k8s-app: filebeat-appnode1
  template:
    metadata:
      labels:
        k8s-app: filebeat-appnode1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "<node_hostname>"
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostAliases:
      - ip: "x.x.x.x"
        hostnames:
        - "<kafka_node_name>"
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.4.0
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: LOGSTASH_HOST
          value: logstash.logging.svc.cluster.local
        - name: LOGSTASH_PORT
          value: "5044"
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
          requests:
            cpu: 300m
            memory: 300Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: inputs
          mountPath: /usr/share/filebeat/inputs.d
          readOnly: true
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /app/platform/kubernetes/logs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config-appnode1
      - name: varlibdockercontainers
        hostPath:
          path: /app/platform/kubernetes/logs
      - name: inputs
        configMap:
          defaultMode: 0600
          name: filebeat-inputs-appnode1
      - name: data
        hostPath:
          path: /var/lib/filebeat-data-appnode1
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: logging
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: logging
  labels:
    k8s-app: filebeat
---
