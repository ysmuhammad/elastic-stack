---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-yml
  namespace: logging
  labels:
    k8s-app: logstash
data:
  logstash.yml: |-
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    xpack.monitoring.enabled: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-jvm
  namespace: logging
  labels:
    k8s-app: logstash
data:
  jvm.options: |-
    -Xms2g
    -Xmx2g
    -XX:+UseConcMarkSweepGC
    -XX:CMSInitiatingOccupancyFraction=75
    -XX:+UseCMSInitiatingOccupancyOnly
    -Djava.awt.headless=true
    -Dfile.encoding=UTF-8
    -Djruby.compile.invokedynamic=true
    -Djruby.jit.threshold=0
    -Djruby.regexp.interruptible=true
    -XX:+HeapDumpOnOutOfMemoryError
    -Djava.security.egd=file:/dev/urandom
    -Dlog4j2.isThreadContextMapInheritable=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-conf
  namespace: logging
  labels:
    k8s-app: logstash
data:
  logstash.conf: |-
    input {
      kafka {
              bootstrap_servers => ["<kafka_node_name>:9200"]
              topics => "<topic_name>"
              codec => "json"
              tags => ["kafka"]
      }
    }

    filter {
      if "kafka" in [tags] {
            json { 
                    source => "message"
            }
      }
      mutate { 
            remove_field => [ "agent.ephemeral_id", "agent.hostname", "agent.id", "agent.type", "agent.version" ] }
      if [agent] != "yotta" {
         mutate {
            remove_field => [ "agent" ] }
         }
    }

    output {
      elasticsearch {
             hosts => ["<elasticsearch_node_name>:9200"]
             manage_template => false
             index => "<index_name->%{+YYYY.MM.dd}"
             #index => "test-%{+YYYY.MM.dd}"
             document_type => "%{[@metadata][type]}"
             template_name => "<index_template_name>"
          }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: logstash
  template:
    metadata:
      labels:
        deployment: logstash
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "<node_hostname>"
      hostAliases:
      - ip: "x.x.x.x"
        hostnames:
        - "<kafka_node_name>"
      - ip: "x.x.x.x"
        hostnames:
        - "<elasticsearch_node_name>"
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.4.2
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 1500m
            memory: 2000Mi
          requests:
            cpu: 500m
            memory: 1000Mi
        ports:
        - containerPort: 5000
          protocol: "TCP"
          name: beats
        volumeMounts:
        - name: logstash-yml
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
        - name: logstash-jvm
          mountPath: /usr/share/logstash/config/jvm.options
          subPath: logstash.conf
        - name: logstash-conf
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
      volumes:
      - name: logstash-yml
        configMap:
          name: logstash-yml
      - name: logstash-jvm
        configMap:
          name: logstash-conf
      - name: logstash-conf
        configMap:
          name: logstash-conf
